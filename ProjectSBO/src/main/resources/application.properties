spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

#port
#server.tomcat.additional-tld-skip-patterns="*.jar"

#DataSource
# spring.datasource.url = jdbc:oracle:thin:@localhost:1521/orcl
# spring.datasource.username = HANA
# spring.datasource.password = 1234
# spring.datasource.driver-class-name = oracle.jdbc.driver.OracleDriver
 
# New Datasource, 데이터 소스(정보)를 읽어들일때 datasource 하위의 hikari를 읽어들이지 않기 떄문에
# hikari 내부로 옮겨서 새로 만든다. 데이터베이스 URL 경우도 
spring.datasource.hikari.jdbc-url = jdbc:oracle:thin:@localhost:1521/orcl?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Asia/Seoul
spring.datasource.hikari.username = HANA
spring.datasource.hikari.password = 1234
spring.datasource.hikari.driver-class-name = oracle.jdbc.OracleDriver
spring.datasource.hikari.maximum-pool-size=20

#server.tomcat.additional-tld-skip-patterns=*.jar

#/upload 로 요청이 들어오면a resource.path에서 찾기 
resource.path=file:///C:/resource/
upload.path=/upload/**
 
#이미지 파일 업로드 위치
resource=C:/resource
 
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.mvc.hiddenmethod.filter.enabled=true

# smtp
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=abctmxk@gmail.com
spring.mail.password=lcgjoznafpgbrpuk
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true

# 결제 기능
imp_key=5523432317220701
imp_secret=gY9IlPnKLS2nsZ78B53sBrWhwHJu12MDjmdnoHuGDoTMzBp9ZmJYNpmvTb3LbWjcKGp2gjX2yelGIIyc

# OCR
# GOOGLE_APPLICATION_CREDENTIALS="D:/FinalProject/install/google-ocr.json"
# spring.cloud.gcp.credentials.location=classpath:libs/keys/google-ocr.json
spring.cloud.gcp.credentials.location = classpath:key.json

# 재시작없이 jsp 적용처리
server.servlet.jsp.init-parameters.development=true






