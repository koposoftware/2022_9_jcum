<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

	<select id="overlapCheck" resultType="int">
		SELECT COUNT(*) FROM
		BM_USER WHERE ${valueType } = #{value }
	</select>

	<insert id="join">
		INSERT INTO BM_USER (
		ID,
		USERNAME,
		PASSWORD,
		EMAIL,
		NICKNAME,
		PHONE
		) VALUES (
		USER_ID_SEQ.NEXTVAL,
		#{username },
		#{password },
		#{email },
		#{nickname },
		#{phone }
		)
	</insert>



	<select id="login" resultType="User">
		SELECT
		U.ID
		,U.USERNAME
		,U.PASSWORD
		,U.EMAIL
		,U.NICKNAME
		,U.PHONE
		,U.RATING
		,U.ROLE
		,P.POINT
		FROM
		BM_USER U
		LEFT JOIN
		(SELECT USER_ID, SUM(POINT) POINT FROM BM_POINT GROUP BY USER_ID) P
		ON
		U.ID = P.USER_ID
		WHERE U.USERNAME = #{username }
	</select>
	
	
	<select id="myPoint" resultType="Point">
		SELECT 
			USER_ID
			,USED_DATE
			,INFO
			,POINT
		FROM
			BM_POINT    
		WHERE 
			USER_ID = #{id }
		ORDER BY
			USED_DATE DESC
	</select>
	
	
	<!-- 상품권 -->
	<select id="getGiftCart" resultType="Map">
		SELECT	    POINT "point"
					,INFO "info"
					,NVL(U.USER_ID, 0) "userId"
		FROM	    BM_GIFT_CARD G
		LEFT JOIN   (SELECT * FROM BM_USED_CARD WHERE USER_ID = #{userId }) U
		ON          G.GIFT_CARD_NUM = U.GIFT_CARD_NUM
		WHERE 	    G.GIFT_CARD_NUM = #{giftCardNum }
	</select>
 
 	<!-- 상품권 -->
	<insert id="pointRegist" >
		INSERT ALL
			INTO BM_POINT (
				USER_ID
				,INFO
				,POINT
			) VALUES (
				#{userId }
				,#{info }
				,#{point }
			)
			
			INTO BM_USED_CARD (
				USER_ID
				,GIFT_CARD_NUM
			) VALUES (
				#{userId }
				,#{giftCardNum }
			)
		SELECT * FROM DUAL	
	</insert>
	
	
	
	<resultMap type="Review" id="ReviewMap">
		<result column="ORDER_NUM" property="orderNum"/>
		<result column="STORE_ID" property="storeId"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="BOSS_COMMENT" property="bossComment"/>
		<result column="REGI_DATE" property="regiDate"/>
		<result column="SCORE" property="score"/>
		<result column="REVIEW_IMG" property="reviewImg"/>
		<result column="USER_ID" property="userId"/>
	</resultMap>
	
	<!-- 내 댓글 처리 -->
	<select id="myReviewList" resultMap="ReviewMap">
		SELECT  ORDER_NUM
				,STORE_ID
				,REVIEW_CONTENT
				,BOSS_COMMENT
				,REGI_DATE
				,SCORE
				,REVIEW_IMG
				,USER_ID
		FROM    BM_REVIEW
		WHERE   USER_ID = #{id }
		ORDER BY REGI_DATE DESC
	</select>
	
 	<!-- 내 댓글 처리 -->
	<delete id="deleteReview">
		DELETE BM_REVIEW 
		WHERE	USER_ID = #{userId }
		AND		ORDER_NUM = #{orderNum } 
	</delete>
	
	
	<!-- 내 정보 수정 -->
	<update id="modifyInfo">
	    UPDATE BM_USER SET
	    
	    <if test="valueType == 'password'">
	        PASSWORD = #{value }
	    </if>
	    
	    <if test="valueType == 'nickname'">
	        NICKNAME = #{value }		
	    </if>
	    
	    <if test="valueType == 'phone'">
	        PHONE = #{value }		
	    </if>
	    
	    WHERE	USERNAME = #{username } 
	</update>
	
	<!-- smtp 메일 보내기 관련 -->
	<select id="findId" resultType="String">
	    SELECT	USERNAME
	    FROM	BM_USER
	    WHERE	EMAIL = #{email }
	</select>
	
	
	<select id="emailCheck" resultType="String">
	    SELECT	1 result 
	    FROM 	DUAL 
	    WHERE EXISTS(
	        SELECT	1 
	        FROM 	BM_USER 
	        WHERE 	USERNAME = #{username } 
	        AND 	EMAIL = #{email }
	    ) 
	</select>
 
 
	<select id="phoneCheck" resultType="String">
	    SELECT	1 result 
	    FROM 	DUAL 
	    WHERE EXISTS(
	        SELECT	1 
	        FROM 	BM_USER 
	        WHERE 	USERNAME = #{username } 
	        AND 	PHONE = #{phone }
	    )
	</select>
	
	
	
	
	
		

</mapper>